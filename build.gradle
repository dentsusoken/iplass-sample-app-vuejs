plugins {
	id 'java'
	id 'war'
	id 'eclipse-wtp'
	id 'com.github.node-gradle.node' version '7.0.1'
}

ext {
	javaVersion = JavaVersion.VERSION_21
	nodejsVersion = '20.13.1'
}

repositories {
	mavenCentral()

	if (project.hasProperty('iPLAssMavenRepoUrl')) {
		maven {
			url iPLAssMavenRepoUrl
		}
	}
}

dependencies {
	implementation platform("org.iplass:iplass-bom:${iPLAssVersion}")

	implementation 'org.iplass:iplass-core'
	implementation 'org.iplass:iplass-gem'
	implementation 'org.iplass:iplass-web'

	runtimeOnly 'org.iplass:iplass-admin'
	runtimeOnly 'org.iplass:iplass-tools'

	providedRuntime group: 'org.iplass', name: 'iplass-tools-batch', version: iPLAssVersion, transitive: false

	// Infinispanを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass:iplass-infinispan'

	// Redisを利用する場合は以下のコメントアウトを外してください。
//	runtimeOnly 'org.iplass:iplass-redis'

	// provided JakartaEE 10 apis
	// Jakarta Servlet
	providedCompile 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	// Jakarta JSP
	providedCompile 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1'
	// Jakarta EL
	providedCompile 'jakarta.el:jakarta.el-api:5.0.0'
	
	// Jakarta Annotations
	compileOnly 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	// Jakarta Activation
	compileOnly 'jakarta.activation:jakarta.activation-api:2.1.3'
	// Jakarta jstl
	compileOnly 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	// Jakarta rest
	compileOnly 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
	// Jakarta Mail
	compileOnly 'jakarta.mail:jakarta.mail-api:2.1.3'
	// Jakarta Validation
	compileOnly 'jakarta.validation:jakarta.validation-api:3.0.2'
	// Jakarta xml binding
	compileOnly 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'

	// Jakarta Activation runtime
	runtimeOnly 'org.eclipse.angus:angus-activation:2.0.2'
	// Jakarta jstl runtime
	runtimeOnly 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	runtimeOnly 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
	// Jakarta rest runtime
	runtimeOnly platform('org.glassfish.jersey:jersey-bom:3.1.7')
	runtimeOnly 'org.glassfish.jersey.containers:jersey-container-servlet'
	runtimeOnly 'org.glassfish.jersey.media:jersey-media-jaxb'
	runtimeOnly 'org.glassfish.jersey.media:jersey-media-json-jackson'
	runtimeOnly 'org.glassfish.jersey.media:jersey-media-multipart'
	runtimeOnly 'org.glassfish.jersey.inject:jersey-hk2'
	runtimeOnly 'com.fasterxml.jackson.jakarta.rs:jackson-jakarta-rs-json-provider'
	// Jakarta Mail runtime
	runtimeOnly 'org.eclipse.angus:angus-mail:2.0.3'
	// Jakarta Validation runtime
	runtimeOnly 'jakarta.validation:jakarta.validation-api:3.0.2'
	runtimeOnly 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	// Jakarta xml binding runtime
	runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:4.0.5'

	// NOTE: Bundled with tomcat, required for batch.
	// Jakarta EL runtime
	runtimeOnly 'org.glassfish.expressly:expressly:5.0.0'

	testImplementation 'org.iplass:iplass-test'
	testImplementation platform('org.junit:junit-bom:5.10.2')
	testImplementation 'org.junit.jupiter:junit-jupiter'

	// 以下のJDBCドライバはテナント作成ツール(runTenantBatchタスク)の実行に必要となります。
	// 実行する場合は使用するJDBCドライバのコメントアウトを外してください。
	// Maven Cetnral Repository に登録されていないJDBCドライバについては'lib/jdbc'に配置してください。
//	providedRuntime 'com.mysql:mysql-connector-j:9.0.0'
//	providedRuntime 'org.postgresql:postgresql:42.7.3'
//	providedRuntime 'com.microsoft.sqlserver:mssql-jdbc:12.6.3.jre11'
//	providedRuntime 'com.oracle.database.jdbc:ojdbc8:23.4.0.24.05'

	providedRuntime fileTree('lib').include('**/*.jar')
}

java {
	sourceCompatibility = javaVersion
	targetCompatibility = javaVersion
}

tasks.withType(AbstractCompile) {
	options.encoding = 'UTF-8'
}

node {
	download = true
	version = nodejsVersion
	// install | ci
	npmInstallCommand = 'install'
}

eclipse {
	project {
		natures 'org.eclipse.jdt.core.javanature',
			'org.eclipse.wst.common.project.facet.core.nature',
			'org.eclipse.wst.common.modulecore.ModuleCoreNature',
			'org.eclipse.jem.workbench.JavaEMFNature',
			'org.eclipse.buildship.core.gradleprojectnature'
	}

	wtp {
		facet {
			facets = []
			facet name: 'jst.java', version: javaVersion
			facet name: 'jst.web', version: '6.0'
			facet name: 'wst.jsdt.web', version: '1.0'

			//set Runtime to tomcat v10.1
			file {
				withXml {
					it.asNode().appendNode('runtime', [name: 'Apache Tomcat v10.1'])
				}
			}
		}

		component {
			contextPath  = 'iplass-sample-app-vuejs'
		}
	}
}

task buildVue(type: NpmTask) {
	args = ['run', 'vue:build'];
}

// テナント作成ツール実行
task runTenantBatch(type: JavaExec, group: 'application', description : 'execute tenant batch.') {
	mainClass = "org.iplass.mtp.tools.batch.tenant.TenantBatch"
	classpath = sourceSets.main.runtimeClasspath
}
